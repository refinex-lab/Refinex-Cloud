# Refinex AI 服务配置

# ====================================================================
# 业务自定义配置
# ====================================================================
refinex:
  # API 文档配置（覆盖 refinex-common.yml 的通用配置）
  swagger:
    # 标题
    title: Refinex AI 智能体服务 API 文档
    # 描述
    description: 提供智能体管理核心业务功能的 RESTful API 接口
    # 版本
    version: 1.0.0

  # AI 模块配置
  ai:
    # 是否启用 AI 模块
    enabled: true
    
    # 默认配置
    default-config:
      # 请求超时时间（秒）
      timeout: 60s
      # 熔断器阈值（连续失败次数）
      circuit-breaker-threshold: 10
    
    # 模型实例缓存配置
    cache:
      # 是否启用缓存
      enabled: true
      # 缓存过期时间（小时）
      ttl: 24
      # 最大缓存容量
      max-size: 100
    
    # 降级配置（可选，数据库配置优先）
    fallback:
      # 是否启用降级
      enabled: true
      # 默认聊天模型
      default-chat-model: gpt-3.5-turbo
      # 默认图像模型
      default-image-model: dall-e-3
      # 默认嵌入模型
      default-embedding-model: text-embedding-ada-002
    
    # 向量存储配置
    vector-store:
      # 是否启用向量存储
      enabled: false
      # 向量存储类型：SIMPLE（内存+文件持久化）、REDIS、QDRANT、MILVUS
      type: SIMPLE
      
      # SimpleVectorStore 配置
      simple:
        # 存储文件路径
        store-path: ${user.home}/vector_store
        # 定时保存间隔（分钟）
        save-interval-minutes: 1

# ====================================================================
# Spring AI 官方配置
# ====================================================================
spring:
  ai:
    # 重试配置（Spring AI 官方配置项）
    # 参考文档：https://docs.spring.io/spring-ai/reference/api/retry.html
    retry:
      # 最大重试次数, 默认 10 次
      max-attempts: 10
      # 退避策略
      backoff:
        # 初始间隔, 默认 2 秒
        initial-interval: 2s
        # 退避间隔倍数, 默认 5 倍
        multiplier: 5
        # 最大退避持续时间, 默认 3 分钟
        max-interval: 3m
      # 是否在客户端错误时重试, 默认 false
      # 如果为 false，则抛出 NonTransientAiException 异常，并且不尝试重试 4xx 客户端错误代码
      on-client-errors: false
      # 不应触发重试的 HTTP 状态代码列表（例如，不应抛出 NonTransientAiException）
      # exclude-on-http-codes: [400, 404]
      # 应触发重试的 HTTP 状态代码列表（例如，应抛出 TransientAiException）
      # on-http-codes: [429, 500, 502, 503, 504]
    
    # ====================================================================
    # 向量存储配置（Spring AI 官方配置项）
    # 参考文档：https://docs.spring.io/spring-ai/reference/api/vectordbs.html
    # ====================================================================
    vectorstore:
      # Redis 向量存储配置
      # 参考文档：https://docs.spring.io/spring-ai/reference/api/vectordbs/redis.html
      redis:
        # 是否初始化 Schema（生产环境建议设置为 false，手动创建索引）
        initialize-schema: false
        # 索引名称
        index-name: spring-ai-index
        # Redis Key 前缀
        prefix: "embedding:"
        # Redis URI（格式：redis://[username:password@]host:port[/database]）
        uri: redis://localhost:6379
        # 或者使用独立配置
        # host: localhost
        # port: 6379
        # username: default
        # password:
        # database: 0
      
      # Qdrant 向量存储配置
      # 参考文档：https://docs.spring.io/spring-ai/reference/api/vectordbs/qdrant.html
      qdrant:
        # 是否初始化 Schema（生产环境建议设置为 false，手动创建 Collection）
        initialize-schema: false
        # Collection 名称
        collection-name: vector_store
        # Qdrant 主机地址
        host: localhost
        # Qdrant gRPC 端口
        port: 6334
        # API Key（可选）
        api-key:
        # 是否使用 TLS
        use-tls: false
      
      # Milvus 向量存储配置
      # 参考文档：https://docs.spring.io/spring-ai/reference/api/vectordbs/milvus.html
      milvus:
        # 是否初始化 Schema（生产环境建议设置为 false，手动创建 Collection）
        initialize-schema: false
        # Collection 名称
        collection-name: vector_store
        # 数据库名称
        database-name: default
        # Milvus 主机地址
        host: localhost
        # Milvus 端口
        port: 19530
        # 用户名
        username: root
        # 密码
        password: milvus
        # Token（可选，用于认证）
        token:
        # 嵌入维度
        embedding-dimension: 1536
        # 索引类型：IVF_FLAT, IVF_SQ8, IVF_PQ, HNSW, ANNOY
        index-type: IVF_FLAT
        # 度量类型：COSINE, L2, IP
        metric-type: COSINE
